-- Table: public.auto

-- DROP TABLE public.auto;

CREATE TABLE public.auto
(
    id bigint NOT NULL DEFAULT nextval('auto_id_seq'::regclass),
    jhi_link character varying(255) COLLATE pg_catalog."default",
    vin character varying(255) COLLATE pg_catalog."default",
    jhi_number character varying(255) COLLATE pg_catalog."default",
    model character varying(255) COLLATE pg_catalog."default",
    jhi_type character varying(255) COLLATE pg_catalog."default",
    formula character varying(255) COLLATE pg_catalog."default",
    marka character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT pk_auto PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.auto
    OWNER to postgres;
	


-- Table: public.clean

-- DROP TABLE public.clean;

CREATE TABLE public.clean
(
    id bigint NOT NULL DEFAULT nextval('clean_id_seq'::regclass),
    name character varying(255) COLLATE pg_catalog."default",
    status character varying(255) COLLATE pg_catalog."default",
    cost character varying(255) COLLATE pg_catalog."default",
    ticket character varying(255) COLLATE pg_catalog."default",
    start_date timestamp without time zone,
    zakaz_id bigint,
    cleaner_id bigint,
    multi_zakaz_id bigint,
    created_by character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created_date timestamp without time zone NOT NULL DEFAULT now(),
    last_modified_by character varying(50) COLLATE pg_catalog."default",
    last_modified_date timestamp without time zone,
    end_date timestamp without time zone,
    filial character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT pk_clean PRIMARY KEY (id),
    CONSTRAINT fk_clean_cleaner_id FOREIGN KEY (cleaner_id)
        REFERENCES public.jhi_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_clean_multi_zakaz_id FOREIGN KEY (multi_zakaz_id)
        REFERENCES public.multi_zakaz (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_clean_zakaz_id FOREIGN KEY (zakaz_id)
        REFERENCES public.zakaz (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.clean
    OWNER to postgres;
	
	

-- Table: public.gate

-- DROP TABLE public.gate;

CREATE TABLE public.gate
(
    id bigint NOT NULL,
    "number" character varying(255) COLLATE pg_catalog."default",
    company character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    arrival_date timestamp without time zone,
    departure_date timestamp without time zone,
    stayed boolean DEFAULT false,
    filial character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT pk_gate PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.gate
    OWNER to postgres;
	


-- Table: public.multi_zakaz

-- DROP TABLE public.multi_zakaz;

CREATE TABLE public.multi_zakaz
(
    id bigint NOT NULL DEFAULT nextval('multi_zakaz_id_seq'::regclass),
    "position" character varying(255) COLLATE pg_catalog."default",
    linked boolean,
    connected_id bigint,
    CONSTRAINT pk_multi_zakaz PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.multi_zakaz
    OWNER to postgres;



-- Table: public.place

-- DROP TABLE public.place;

CREATE TABLE public.place
(
    id bigint NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    area character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT pk_place PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.place
    OWNER to postgres;



-- Table: public.task

-- DROP TABLE public.task;

CREATE TABLE public.task
(
    id bigint NOT NULL DEFAULT nextval('task_id_seq'::regclass),
    status character varying(255) COLLATE pg_catalog."default",
    jhi_order integer,
    next_status character varying(255) COLLATE pg_catalog."default",
    zakaz_id bigint,
    start_place_id bigint,
    end_place_id bigint,
    comment character varying(150) COLLATE pg_catalog."default",
    filial character varying(50) COLLATE pg_catalog."default",
    start_time timestamp without time zone,
    end_time timestamp without time zone,
    CONSTRAINT pk_task PRIMARY KEY (id),
    CONSTRAINT fk_task_end_place_id FOREIGN KEY (end_place_id)
        REFERENCES public.place (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_task_start_place_id FOREIGN KEY (start_place_id)
        REFERENCES public.place (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_task_zakaz_id FOREIGN KEY (zakaz_id)
        REFERENCES public.zakaz (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.task
    OWNER to postgres;



-- Table: public.timing

-- DROP TABLE public.timing;

CREATE TABLE public.timing
(
    id bigint NOT NULL DEFAULT nextval('timing_id_seq'::regclass),
    zakaz_id bigint,
    jhi_start timestamp without time zone,
    jhi_end timestamp without time zone,
    filial character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT pk_timing PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.timing
    OWNER to postgres;



-- Table: public.zakaz

-- DROP TABLE public.zakaz;

CREATE TABLE public.zakaz
(
    id bigint NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    company character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    problem character varying(1500) COLLATE pg_catalog."default",
    planned boolean,
    clean boolean,
    zakaztime timestamp without time zone,
    plannedtime timestamp without time zone,
    remonttype character varying(255) COLLATE pg_catalog."default",
    jhi_link character varying(255) COLLATE pg_catalog."default",
    status character varying(255) COLLATE pg_catalog."default",
    place_id bigint,
    auto_id bigint,
    multi_zakaz_id bigint,
    jhi_master character varying(255) COLLATE pg_catalog."default",
    filial character varying(50) COLLATE pg_catalog."default",
    created_by character varying(50) COLLATE pg_catalog."default",
    created_date timestamp without time zone NOT NULL DEFAULT now(),
    last_modified_by character varying(50) COLLATE pg_catalog."default",
    last_modified_date timestamp without time zone,
    CONSTRAINT pk_zakaz PRIMARY KEY (id),
    CONSTRAINT zakaz_multi_zakaz_id_key UNIQUE (multi_zakaz_id)
,
    CONSTRAINT fk_zakaz_auto_id FOREIGN KEY (auto_id)
        REFERENCES public.auto (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_zakaz_multi_zakaz_id FOREIGN KEY (multi_zakaz_id)
        REFERENCES public.multi_zakaz (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_zakaz_place_id FOREIGN KEY (place_id)
        REFERENCES public.place (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.zakaz
    OWNER to postgres;
	
	



-- Table: public.jhi_authority

-- DROP TABLE public.jhi_authority;

CREATE TABLE public.jhi_authority
(
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_jhi_authority PRIMARY KEY (name)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.jhi_authority
    OWNER to postgres;



-- Table: public.jhi_entity_audit_event

-- DROP TABLE public.jhi_entity_audit_event;

CREATE TABLE public.jhi_entity_audit_event
(
    id bigint NOT NULL DEFAULT nextval('jhi_entity_audit_event_id_seq'::regclass),
    entity_id bigint NOT NULL,
    entity_type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    action character varying(20) COLLATE pg_catalog."default" NOT NULL,
    entity_value text COLLATE pg_catalog."default",
    commit_version integer,
    modified_by character varying(100) COLLATE pg_catalog."default",
    modified_date timestamp without time zone NOT NULL,
    CONSTRAINT pk_jhi_entity_audit_event PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.jhi_entity_audit_event
    OWNER to postgres;

-- Index: idx_entity_audit_event_entity_id

-- DROP INDEX public.idx_entity_audit_event_entity_id;

CREATE INDEX idx_entity_audit_event_entity_id
    ON public.jhi_entity_audit_event USING btree
    (entity_id)
    TABLESPACE pg_default;

-- Index: idx_entity_audit_event_entity_type

-- DROP INDEX public.idx_entity_audit_event_entity_type;

CREATE INDEX idx_entity_audit_event_entity_type
    ON public.jhi_entity_audit_event USING btree
    (entity_type COLLATE pg_catalog."default")
    TABLESPACE pg_default;



-- Table: public.jhi_persistent_audit_event

-- DROP TABLE public.jhi_persistent_audit_event;

CREATE TABLE public.jhi_persistent_audit_event
(
    event_id bigint NOT NULL,
    principal character varying(50) COLLATE pg_catalog."default" NOT NULL,
    event_date timestamp without time zone,
    event_type character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT pk_jhi_persistent_audit_event PRIMARY KEY (event_id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.jhi_persistent_audit_event
    OWNER to postgres;

-- Index: idx_persistent_audit_event

-- DROP INDEX public.idx_persistent_audit_event;

CREATE INDEX idx_persistent_audit_event
    ON public.jhi_persistent_audit_event USING btree
    (principal COLLATE pg_catalog."default", event_date)
    TABLESPACE pg_default;



-- Table: public.jhi_persistent_audit_evt_data

-- DROP TABLE public.jhi_persistent_audit_evt_data;

CREATE TABLE public.jhi_persistent_audit_evt_data
(
    event_id bigint NOT NULL,
    name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    value character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT jhi_persistent_audit_evt_data_pkey PRIMARY KEY (event_id, name),
    CONSTRAINT fk_evt_pers_audit_evt_data FOREIGN KEY (event_id)
        REFERENCES public.jhi_persistent_audit_event (event_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.jhi_persistent_audit_evt_data
    OWNER to postgres;

-- Index: idx_persistent_audit_evt_data

-- DROP INDEX public.idx_persistent_audit_evt_data;

CREATE INDEX idx_persistent_audit_evt_data
    ON public.jhi_persistent_audit_evt_data USING btree
    (event_id)
    TABLESPACE pg_default;



-- Table: public.jhi_user

-- DROP TABLE public.jhi_user;

CREATE TABLE public.jhi_user
(
    id bigint NOT NULL,
    login character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password_hash character varying(60) COLLATE pg_catalog."default",
    first_name character varying(50) COLLATE pg_catalog."default",
    last_name character varying(50) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    image_url character varying(256) COLLATE pg_catalog."default",
    activated boolean NOT NULL,
    lang_key character varying(5) COLLATE pg_catalog."default",
    activation_key character varying(20) COLLATE pg_catalog."default",
    reset_key character varying(20) COLLATE pg_catalog."default",
    created_by character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created_date timestamp without time zone NOT NULL,
    reset_date timestamp without time zone,
    last_modified_by character varying(50) COLLATE pg_catalog."default",
    last_modified_date timestamp without time zone,
    filial character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT pk_jhi_user PRIMARY KEY (id),
    CONSTRAINT jhi_user_email_key UNIQUE (email)
,
    CONSTRAINT jhi_user_login_key UNIQUE (login)

)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.jhi_user
    OWNER to postgres;

-- Index: idx_user_email

-- DROP INDEX public.idx_user_email;

CREATE UNIQUE INDEX idx_user_email
    ON public.jhi_user USING btree
    (email COLLATE pg_catalog."default")
    TABLESPACE pg_default;

-- Index: idx_user_login

-- DROP INDEX public.idx_user_login;

CREATE UNIQUE INDEX idx_user_login
    ON public.jhi_user USING btree
    (login COLLATE pg_catalog."default")
    TABLESPACE pg_default;



-- Table: public.jhi_user_authority

-- DROP TABLE public.jhi_user_authority;

CREATE TABLE public.jhi_user_authority
(
    user_id bigint NOT NULL,
    authority_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT jhi_user_authority_pkey PRIMARY KEY (user_id, authority_name),
    CONSTRAINT fk_authority_name FOREIGN KEY (authority_name)
        REFERENCES public.jhi_authority (name) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_user_id FOREIGN KEY (user_id)
        REFERENCES public.jhi_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.jhi_user_authority
    OWNER to postgres;



-- Table: public.databasechangelog

-- DROP TABLE public.databasechangelog;

CREATE TABLE public.databasechangelog
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    author character varying(255) COLLATE pg_catalog."default" NOT NULL,
    filename character varying(255) COLLATE pg_catalog."default" NOT NULL,
    dateexecuted timestamp without time zone NOT NULL,
    orderexecuted integer NOT NULL,
    exectype character varying(10) COLLATE pg_catalog."default" NOT NULL,
    md5sum character varying(35) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    comments character varying(255) COLLATE pg_catalog."default",
    tag character varying(255) COLLATE pg_catalog."default",
    liquibase character varying(20) COLLATE pg_catalog."default",
    contexts character varying(255) COLLATE pg_catalog."default",
    labels character varying(255) COLLATE pg_catalog."default",
    deployment_id character varying(10) COLLATE pg_catalog."default"
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.databasechangelog
    OWNER to postgres;



-- Table: public.databasechangeloglock

-- DROP TABLE public.databasechangeloglock;

CREATE TABLE public.databasechangeloglock
(
    id integer NOT NULL,
    locked boolean NOT NULL,
    lockgranted timestamp without time zone,
    lockedby character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT pk_databasechangeloglock PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.databasechangeloglock
    OWNER to postgres;
